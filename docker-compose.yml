services:
  backend:
    container_name: backend
    image: ghcr.io/szimina/film-react-nest/backend:latest
    depends_on:
      - postgres
    networks:
      - postgres
    env_file:
      - backend/.env
    restart: unless-stopped

  frontend:
    container_name: frontend
    image: ghcr.io/szimina/film-react-nest/frontend:latest
    networks:
      - frontend
    volumes:
      - frontend_dist:/app/dist
    env_file:
      - frontend/.env

  postgres:
    container_name: postgres_container
    image: postgres:14.8-alpine3.18
    env_file:
      - backend/.env
    volumes:
      - ./docker-init.sql:/docker-entrypoint-initdb.d/docker-init.sql
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4:7.2
    container_name: pgadmin
    env_file:
      - backend/.env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 8081:8081
    networks:
      - postgres
    depends_on:
      - postgres
    deploy:
        resources:
          limits:
            cpus: '0.5'
            memory: 1G
    restart: unless-stopped

  nginx:
    image: nginx
    ports:
      - 80:80
    networks:
      - frontend
      - postgres
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_dist:/var/www/frontend:ro

networks:
  frontend:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
  frontend_dist: